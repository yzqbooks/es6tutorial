import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,e as t}from"./app-bede4f5a.js";const e={},c=t(`<h1 id="stddef-h" tabindex="-1"><a class="header-anchor" href="#stddef-h" aria-hidden="true">#</a> stddef.h</h1><p><code>stddef.h</code>提供了常用类型和宏的定义，但没有声明任何函数。</p><p>这个头文件定义的类型如下。</p><ul><li>ptrdiff_t：指针相减运算时，返回结果的数据类型。</li><li>size_t：<code>sizeof</code>运算符返回的类型。</li><li>wchar_t：一种足够大、能容纳各种字符的类型。</li></ul><p>以上三个类型都是整数类型，其中<code>ptrdiff_t</code>是有符号整数，<code>size_t</code>是无符号整数。</p><p><code>stddef.h</code>定义了两个宏。</p><ul><li>NULL：空指针。</li><li>offsetof()</li></ul><h2 id="offsetof" tabindex="-1"><a class="header-anchor" href="#offsetof" aria-hidden="true">#</a> offsetof()</h2><p><code>offsetof()</code>是<code>stddef.h</code>定义的一个宏，用来返回某个属性在 Struct 结构内部的起始位置。由于系统为了字节对齐，可能会在 Struct 结构的属性之间插入空字节，这个宏对于确定某个属性的内存位置很有用。</p><p>它是一个带参数的宏，接受两个参数。第一个参数是 Struct 结构，第二个参数是该结构的一个属性，返回 Struct 起始位置到该属性之间的字节数。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">s</span> <span class="token punctuation">{</span>
  <span class="token keyword">char</span> a<span class="token punctuation">;</span>
  <span class="token keyword">int</span> b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">float</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%zu\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">offsetof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">s</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%zu\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">offsetof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">s</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%zu\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">offsetof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">s</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于上面这个 Struct 结构，<code>offsetof(struct s, a)</code>一定等于<code>0</code>，因为<code>a</code>属性是第一个属性，与 Struct 结构自身的地址相同。</p><p>系统为了字节对齐，在<code>a</code>属性后面分配了3个空字节，导致<code>b</code>属性存储在第4个字节，所以<code>offsetof(struct s, b)</code>和<code>offsetof(struct s, c)</code>分别是4和12。</p>`,13),o=[c];function p(u,i){return n(),a("div",null,o)}const r=s(e,[["render",p],["__file","stddef.h.html.vue"]]);export{r as default};
