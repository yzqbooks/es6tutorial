const e=JSON.parse('{"key":"v-1ec2d748","path":"/es6-tutorial/class-extends.html","title":"Class 的继承","lang":"zh-CN","frontmatter":{"description":"简介 Class 可以通过extends关键字实现继承，让子类继承父类的属性和方法。extends 的写法比 ES5 的原型链继承，要清晰和方便很多。 上面示例中，Point是父类，ColorPoint是子类，它通过extends关键字，继承了Point类的所有属性和方法。但是由于没有部署任何代码，所以这两个类完全一样，等于复制了一个Point类。 下...","head":[["meta",{"property":"og:url","content":"https://yzqbooks.github.io/wangdoc/wangdoc/es6-tutorial/class-extends.html"}],["meta",{"property":"og:site_name","content":"wangdoc"}],["meta",{"property":"og:title","content":"Class 的继承"}],["meta",{"property":"og:description","content":"简介 Class 可以通过extends关键字实现继承，让子类继承父类的属性和方法。extends 的写法比 ES5 的原型链继承，要清晰和方便很多。 上面示例中，Point是父类，ColorPoint是子类，它通过extends关键字，继承了Point类的所有属性和方法。但是由于没有部署任何代码，所以这两个类完全一样，等于复制了一个Point类。 下..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-04T22:02:06.000Z"}],["meta",{"property":"article:author","content":"yzqdev"}],["meta",{"property":"article:modified_time","content":"2023-09-04T22:02:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class 的继承\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-04T22:02:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"私有属性和私有方法的继承","slug":"私有属性和私有方法的继承","link":"#私有属性和私有方法的继承","children":[]},{"level":2,"title":"静态属性和静态方法的继承","slug":"静态属性和静态方法的继承","link":"#静态属性和静态方法的继承","children":[]},{"level":2,"title":"Object.getPrototypeOf()","slug":"object-getprototypeof","link":"#object-getprototypeof","children":[]},{"level":2,"title":"super 关键字","slug":"super-关键字","link":"#super-关键字","children":[]},{"level":2,"title":"类的 prototype 属性和__proto__属性","slug":"类的-prototype-属性和-proto-属性","link":"#类的-prototype-属性和-proto-属性","children":[{"level":3,"title":"实例的 __proto__ 属性","slug":"实例的-proto-属性","link":"#实例的-proto-属性","children":[]}]},{"level":2,"title":"原生构造函数的继承","slug":"原生构造函数的继承","link":"#原生构造函数的继承","children":[]},{"level":2,"title":"Mixin 模式的实现","slug":"mixin-模式的实现","link":"#mixin-模式的实现","children":[]}],"git":{"createdTime":1649239740000,"updatedTime":1693864926000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":16.81,"words":5044},"filePathRelative":"es6-tutorial/class-extends.md","localizedDate":"2022年4月6日","autoDesc":true,"excerpt":""}');export{e as data};
