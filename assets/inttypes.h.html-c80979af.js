import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-bede4f5a.js";const i={},t=e(`<h1 id="inttypes-h" tabindex="-1"><a class="header-anchor" href="#inttypes-h" aria-hidden="true">#</a> inttypes.h</h1><p>C 语言还在头文件 inttypes.h 里面，为 stdint.h 定义的四类整数类型，提供了<code>printf()</code>和<code>scanf()</code>的占位符。</p><ul><li>固定宽度整数类型，比如 int8_t。</li><li>最小宽度整数类型，比如 int_least8_t。</li><li>最快最小宽度整数类型，比如 int_fast8_t。</li><li>最大宽度整数类型，比如 intmax_t。</li></ul><p><code>printf()</code>的占位符采用<code>PRI + 原始占位符 + 类型关键字/宽度</code>的形式构成。举例来说，原始占位符为<code>%d</code>，则对应的占位符如下。</p><ul><li>PRIdn （固定宽度类型）</li><li>PRIdLEASTn （最小宽度类型）</li><li>PRIdFASTn （最快最小宽度类型）</li><li>PRIdMAX （最大宽度类型）</li></ul><p>上面占位符中的<code>n</code>，可以用8、16、32、64代入。</p><p>下面是用法示例。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;inttypes.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">int_least16_t</span> x <span class="token operator">=</span> <span class="token number">3490</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;The value is %&quot;</span> PRIdLEAST16 <span class="token string">&quot;!\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面示例中，<code>PRIdLEAST16</code>对应的整数类型为 int_least16_t，原始占位符为<code>%d</code>。另外，<code>printf()</code>的第一个参数用到了多个字符串自动合并的写法。</p><p>下面是其它的原始占位符对应的占位符。</p><ul><li>%i：PRIin PRIiLEASTn PRIiFASTn PRIiMAX</li><li>%o：PRIon PRIoLEASTn PRIoFASTn PRIoMAX</li><li>%u：PRIun PRIuLEASTn PRIuFASTn PRIuMAX</li><li>%x：PRIxn PRIxLEASTn PRIxFASTn PRIxMAX</li><li>%X：PRIXn PRIXLEASTn PRIXFASTn PRIXMAX</li></ul><p><code>scanf()</code>的占位符规则也与之类似。</p><ul><li>%d：SCNdn SCNdLEASTn SCNdFASTn SCNdMAX</li><li>%i：SCNin SCNiLEASTn SCNiFASTn SCNiMAX</li><li>%o：SCNon SCNoLEASTn SCNoFASTn SCNoMAX</li><li>%u：SCNun SCNuLEASTn SCNuFASTn SCNuMAX</li><li>%x：SCNxn SCNxLEASTn SCNxFASTn SCNxMAX</li></ul>`,13),l=[t];function o(c,p){return s(),a("div",null,l)}const r=n(i,[["render",o],["__file","inttypes.h.html.vue"]]);export{r as default};
