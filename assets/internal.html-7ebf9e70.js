import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as d,e as i}from"./app-bede4f5a.js";const c={},t=i(`<h1 id="内部实现" tabindex="-1"><a class="header-anchor" href="#内部实现" aria-hidden="true">#</a> 内部实现</h1><h2 id="git-目录" tabindex="-1"><a class="header-anchor" href="#git-目录" aria-hidden="true">#</a> .git 目录</h2><p>版本管理的所有信息，保存在项目的<code>.git</code>目录之中。如果没有这个目录，Git 就会认为这个仓库没有建立版本管理，必须进行初始化。<code>git init</code>命令的主要作用，就是建立<code>.git</code>目录。</p><p><code>.git/config</code>文件保存仓库的设置。</p><p><code>.git/HEAD</code>文件保存当前工作分支的引用。</p><p><code>.git/hooks</code>目录保存各种事件挂钩的脚本。</p><p><code>.git/objects</code>目录保存文件的内容，格式是二进制<code>blob</code>。</p><h2 id="哈希签名" tabindex="-1"><a class="header-anchor" href="#哈希签名" aria-hidden="true">#</a> 哈希签名</h2><p>每次提交的时候，每个文件、每个树节点（目录）和提交本身，都会生成一个40个字符长的 SHA-1 哈希。</p><p>哈希作为文件名，文件本身保留在<code>.git/objects</code>目录之中。</p><h2 id="git-add-命令" tabindex="-1"><a class="header-anchor" href="#git-add-命令" aria-hidden="true">#</a> git add 命令</h2><p><code>git add</code>会将变动的文件写入<code>.git/objects</code>目录。它内部调用的是<code>git hash-object</code>命令,该命令会计算 SHA-1 哈希，并将 blob 文件放入<code>.git/objects</code>目录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> hash-object <span class="token parameter variable">-w</span> myfile.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>git cat-file</code>命令可以查看 blob 格式对应的原始文件内容。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> cat-file <span class="token parameter variable">-p</span> e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="git-commit-命令" tabindex="-1"><a class="header-anchor" href="#git-commit-命令" aria-hidden="true">#</a> git commit 命令</h2><p><code>git commit</code>命令用于有变动的、并已提交到<code>.git/objects</code>的文件写入历史。</p><p><code>git write-tree</code>为当前仓库创建树节点。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> write-tree
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>git commit-tree</code>命令将指定的树节点写入历史。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ echo“first commit”<span class="token operator">|</span> <span class="token function">git</span> commit-tree <span class="token punctuation">\\</span> 6e9432aeedbad83fbffb7f8aae4a5d1ab50b7fdf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,21),s=[t];function n(o,r){return a(),d("div",null,s)}const h=e(c,[["render",n],["__file","internal.html.vue"]]);export{h as default};
