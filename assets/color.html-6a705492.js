import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c,a as n,b as l,d as r,e as t}from"./app-bede4f5a.js";const p={},i=t(`<h1 id="颜色" tabindex="-1"><a class="header-anchor" href="#颜色" aria-hidden="true">#</a> 颜色</h1><h2 id="颜色关键字" tabindex="-1"><a class="header-anchor" href="#颜色关键字" aria-hidden="true">#</a> 颜色关键字</h2><p>CSS 允许使用关键字表示颜色，CSS2.1 设置了16个基本的颜色，CSS 3 又增加了131个。</p><h2 id="六位颜色表示法" tabindex="-1"><a class="header-anchor" href="#六位颜色表示法" aria-hidden="true">#</a> 六位颜色表示法</h2><p>六位颜色表示法又称为 RGB 表示，分别使用两位十六进制数表示红色（R）、绿色（G）、蓝色（B），组合在一起就是六位，然后加上<code>#</code>前缀，比如<code>#59007F</code>。</p><p>每种颜色使用0～255表示浓度，0表示没有，255表示浓度最深。</p><p>如果一个十六进制颜色是由三对重复的数字组成的，如<code>#ff3344</code>，可以缩写为<code>#f34</code>。</p><h2 id="八位颜色表示法" tabindex="-1"><a class="header-anchor" href="#八位颜色表示法" aria-hidden="true">#</a> 八位颜色表示法</h2><p>Chrome 浏览器支持八位的颜色表示法<code>RRGGBBAA</code>，前六位是红、绿、蓝颜色值，后两位表示透明度（alpha transparency）。比如，<code>#ffffff80</code>相当于<code>rgba(255, 255, 255, .5)</code>。</p><p>alpha设置越接近0，颜色就越透明。如果设为0，就是完全透明的，就像没有设置任何颜色。类似地，1表示完全不透明。</p><h2 id="hsl-和-hsla-表示法" tabindex="-1"><a class="header-anchor" href="#hsl-和-hsla-表示法" aria-hidden="true">#</a> HSL 和 HSLA 表示法</h2><p>HSL 代表色相（hue）、饱和度（saturation）和亮度（lightness），其中色相的取值范围为0～360，饱和度和亮度的取值均为百分数，范围为0～100%。</p><ul><li>红色为hsl(0,100%,50%);</li><li>黄色为hsl(60,100%,50%);</li><li>绿色为hsl(120,100%,50%);</li><li>青色为hsl(180,100%,50%);</li><li>蓝色为hsl(240,100%,50%);</li><li>紫红色为hsl(300,100%,50%);</li></ul><p>用HSLA指定alpha透明度的方法与RGBA是一致的。</p><h2 id="currentcolor" tabindex="-1"><a class="header-anchor" href="#currentcolor" aria-hidden="true">#</a> currentColor</h2><p><code>currentColor</code>是一个属性值，代表当前元素的<code>color</code>属性的值。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid currentColor<span class="token punctuation">;</span>
  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 2px 2px currentColor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码，<code>border</code>和<code>box-shadow</code>的颜色都与<code>color</code>保持一致。这种写法的好处是，如果要修改<code>color</code>，只要修改一处就可以了，不用修改三个地方。</p><p><code>currentColor</code>的另一个用处，是让衍生类都继承基类的颜色。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.box .child-1</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.box .child-2</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>
    border 1px solid currentColor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>伪元素也可以使用<code>currentColor</code>。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.box:before</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid currentColor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,23),d={href:"http://www.qcyoung.com/2016/09/28/%E3%80%90%E8%AF%91%E3%80%91%E4%BD%BF%E7%94%A8%20currentColor%20%E5%B1%9E%E6%80%A7%E5%86%99%E5%87%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%20CSS%20%E4%BB%A3%E7%A0%81/",target:"_blank",rel:"noopener noreferrer"};function u(h,v){const s=e("ExternalLinkIcon");return o(),c("div",null,[i,n("ul",null,[n("li",null,[n("a",d,[l("使用 currentColor 属性写出更好的 CSS 代码"),r(s)])])])])}const m=a(p,[["render",u],["__file","color.html.vue"]]);export{m as default};
