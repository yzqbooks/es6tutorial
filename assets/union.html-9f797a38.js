import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-bede4f5a.js";const p={},e=t(`<h1 id="union-结构" tabindex="-1"><a class="header-anchor" href="#union-结构" aria-hidden="true">#</a> Union 结构</h1><p>有时需要一种数据结构，不同的场合表示不同的数据类型。比如，如果只用一种数据结构表示水果的“量”，这种结构就需要有时是整数（6个苹果），有时是浮点数（1.5公斤草莓）。</p><p>C 语言提供了 Union 结构，用来自定义可以灵活变更的数据结构。它内部可以包含各种属性，但同一时间只能有一个属性，因为所有属性都保存在同一个内存地址，后面写入的属性会覆盖前面的属性。这样做的最大好处是节省空间。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">union</span> quantity <span class="token punctuation">{</span>
  <span class="token keyword">short</span> count<span class="token punctuation">;</span>
  <span class="token keyword">float</span> weight<span class="token punctuation">;</span>
  <span class="token keyword">float</span> volume<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面示例中，<code>union</code>命令定义了一个包含三个属性的数据类型<code>quantity</code>。虽然包含三个属性，但是同一时间只能取到一个属性。最后赋值的属性，就是可以取到值的那个属性。</p><p>使用时，声明一个该类型的变量。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 写法一</span>
<span class="token keyword">union</span> quantity q<span class="token punctuation">;</span>
q<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

<span class="token comment">// 写法二</span>
<span class="token keyword">union</span> quantity q <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span>count<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 写法三</span>
<span class="token keyword">union</span> quantity q <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码展示了为 Union 结构赋值的三种写法。最后一种写法不指定属性名，就会赋值给第一个属性。</p><p>执行完上面的代码以后，<code>q.count</code>可以取到值，另外两个属性取不到值。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;count is %i\\n&quot;</span><span class="token punctuation">,</span> q<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// count is 4</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;weight is %f\\n&quot;</span><span class="token punctuation">,</span> q<span class="token punctuation">.</span>weight<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 未定义行为</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要让<code>q.weight</code>属性可以取到值，就要先为它赋值。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>q<span class="token punctuation">.</span>weight <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;weight is %f\\n&quot;</span><span class="token punctuation">,</span> q<span class="token punctuation">.</span>weight<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// weight is 0.5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>一旦为其他属性赋值，原先可以取到值的<code>q.count</code>属性就不再有效了。除了这一点，Union 结构的其他用法与 Struct 结构，基本上是一致的。</p><p>Union 结构也支持指针运算符<code>-&gt;</code>。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">union</span> quantity <span class="token punctuation">{</span>
  <span class="token keyword">short</span> count<span class="token punctuation">;</span>
  <span class="token keyword">float</span> weight<span class="token punctuation">;</span>
  <span class="token keyword">float</span> volume<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">union</span> quantity q<span class="token punctuation">;</span>
q<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

<span class="token keyword">union</span> quantity<span class="token operator">*</span> ptr<span class="token punctuation">;</span>
ptr <span class="token operator">=</span> <span class="token operator">&amp;</span>q<span class="token punctuation">;</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> ptr<span class="token operator">-&gt;</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面示例中，<code>ptr</code>是<code>q</code>的指针，那么<code>ptr-&gt;count</code>等同于<code>q.count</code>。</p><p>Union 结构指针与它的属性有关，当前哪个属性能够取到值，它的指针就是对应的数据类型。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">union</span> foo <span class="token punctuation">{</span>
  <span class="token keyword">int</span> a<span class="token punctuation">;</span>
  <span class="token keyword">float</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span> x<span class="token punctuation">;</span>

<span class="token keyword">int</span><span class="token operator">*</span> foo_int_p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>x<span class="token punctuation">;</span>
<span class="token keyword">float</span><span class="token operator">*</span> foo_float_p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>x<span class="token punctuation">;</span>

x<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 12</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>foo_int_p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 12</span>

x<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">3.141592</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%f\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 3.141592</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%f\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>foo_float_p<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 3.141592</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面示例中，<code>&amp;x</code>是 foo 结构的指针，它的数据类型完全由当前赋值的属性决定。</p><p>typedef 命令可以为 Union 数据类型起别名。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">union</span> <span class="token punctuation">{</span>
  <span class="token keyword">short</span> count<span class="token punctuation">;</span>
  <span class="token keyword">float</span> weight<span class="token punctuation">;</span>
  <span class="token keyword">float</span> volume<span class="token punctuation">;</span>
<span class="token punctuation">}</span> quantity<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面示例中，<code>union</code>命令定义了一个包含三个属性的数据类型，<code>typedef</code>命令为它起别名为<code>quantity</code>。</p><p>Union 结构的好处，主要是节省空间。它将一段内存空间，重用于不同类型的数据。定义了三个属性，但同一时间只用到一个，使用 Union 结构就可以节省另外两个属性的空间。Union 结构占用的内存长度，等于它内部最长属性的长度。</p>`,23),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","union.html.vue"]]);export{r as default};
