import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as d,c as i,a as e,b as a,d as n,e as r}from"./app-bede4f5a.js";const t={},l=r(`<h1 id="rsync-命令" tabindex="-1"><a class="header-anchor" href="#rsync-命令" aria-hidden="true">#</a> rsync 命令</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>rsync 是一个常用的 Linux 应用程序，用于文件同步。</p><p>它可以在本地计算机与远程计算机之间，或者两个本地目录之间同步文件（但不支持两台远程计算机之间的同步）。它也可以当作文件复制工具，替代<code>cp</code>和<code>mv</code>命令。</p><p>它名称里面的<code>r</code>指的是 remote，rsync 其实就是“远程同步”（remote sync）的意思。与其他文件传输工具（如 FTP 或 scp）不同，rsync 的最大特点是会检查发送方和接收方已有的文件，仅传输有变动的部分（默认规则是文件大小或修改时间有变动）。</p><p>虽然 rsync 不是 SSH 工具集的一部分，但因为也涉及到远程操作，所以放在这里一起介绍。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>如果本机或者远程计算机没有安装 rsync，可以用下面的命令安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Debian</span>
$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">rsync</span>

<span class="token comment"># Red Hat</span>
$ <span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token function">rsync</span>

<span class="token comment"># Arch Linux</span>
$ <span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> <span class="token function">rsync</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，传输的双方都必须安装 rsync。</p><h2 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法" aria-hidden="true">#</a> 基本用法</h2><p>rsync 可以用于本地计算机的两个目录之间的同步。下面就用本地同步举例，顺便讲解 rsync 几个主要参数的用法。</p><h3 id="r参数" tabindex="-1"><a class="header-anchor" href="#r参数" aria-hidden="true">#</a> <code>-r</code>参数</h3><p>本机使用 rsync 命令时，可以作为<code>cp</code>和<code>mv</code>命令的替代方法，将源目录拷贝到目标目录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-r</span> <span class="token builtin class-name">source</span> destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令中，<code>-r</code>表示递归，即包含子目录。注意，<code>-r</code>是必须的，否则 rsync 运行不会成功。<code>source</code>目录表示源目录，<code>destination</code>表示目标目录。上面命令执行以后，目标目录下就会出现<code>destination/source</code>这个子目录。</p><p>如果有多个文件或目录需要同步，可以写成下面这样。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-r</span> source1 source2 destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令中，<code>source1</code>、<code>source2</code>都会被同步到<code>destination</code>目录。</p><h3 id="a参数" tabindex="-1"><a class="header-anchor" href="#a参数" aria-hidden="true">#</a> <code>-a</code>参数</h3><p><code>-a</code>参数可以替代<code>-r</code>，除了可以递归同步以外，还可以同步元信息（比如修改时间、权限等）。由于 rsync 默认使用文件大小和修改时间决定文件是否需要更新，所以<code>-a</code>比<code>-r</code>更有用。下面的用法才是常见的写法。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-a</span> <span class="token builtin class-name">source</span> destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>目标目录<code>destination</code>如果不存在，rsync 会自动创建。执行上面的命令后，源目录<code>source</code>被完整地复制到了目标目录<code>destination</code>下面，即形成了<code>destination/source</code>的目录结构。</p><p>如果只想同步源目录<code>source</code>里面的内容到目标目录<code>destination</code>，则需要在源目录后面加上斜杠。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-a</span> source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令执行后，<code>source</code>目录里面的内容，就都被复制到了<code>destination</code>目录里面，并不会在<code>destination</code>下面创建一个<code>source</code>子目录。</p><h3 id="n参数" tabindex="-1"><a class="header-anchor" href="#n参数" aria-hidden="true">#</a> <code>-n</code>参数</h3><p>如果不确定 rsync 执行后会产生什么结果，可以先用<code>-n</code>或<code>--dry-run</code>参数模拟执行的结果。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-anv</span> source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令中，<code>-n</code>参数模拟命令执行的结果，并不真的执行命令。<code>-v</code>参数则是将结果输出到终端，这样就可以看到哪些内容会被同步。</p><h3 id="delete参数" tabindex="-1"><a class="header-anchor" href="#delete参数" aria-hidden="true">#</a> <code>--delete</code>参数</h3><p>默认情况下，rsync 只确保源目录的所有内容（明确排除的文件除外）都复制到目标目录。它不会使两个目录保持相同，并且不会删除文件。如果要使得目标目录成为源目录的镜像副本，则必须使用<code>--delete</code>参数，这将删除只存在于目标目录、不存在于源目录的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">--delete</span> source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令中，<code>--delete</code>参数会使得<code>destination</code>成为<code>source</code>的一个镜像。</p><h2 id="排除文件" tabindex="-1"><a class="header-anchor" href="#排除文件" aria-hidden="true">#</a> 排除文件</h2><h3 id="exclude参数" tabindex="-1"><a class="header-anchor" href="#exclude参数" aria-hidden="true">#</a> <code>--exclude</code>参数</h3><p>有时，我们希望同步时排除某些文件或目录，这时可以用<code>--exclude</code>参数指定排除模式。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span><span class="token string">&#39;*.txt&#39;</span> source/ destination
<span class="token comment"># 或者</span>
$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">--exclude</span> <span class="token string">&#39;*.txt&#39;</span> source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面命令排除了所有 TXT 文件。</p><p>注意，rsync 会同步以“点”开头的隐藏文件，如果要排除隐藏文件，可以这样写<code>--exclude=&quot;.*&quot;</code>。</p><p>如果要排除某个目录里面的所有文件，但不希望排除目录本身，可以写成下面这样。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">--exclude</span> <span class="token string">&#39;dir1/*&#39;</span> source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>多个排除模式，可以用多个<code>--exclude</code>参数。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">--exclude</span> <span class="token string">&#39;file1.txt&#39;</span> <span class="token parameter variable">--exclude</span> <span class="token string">&#39;dir1/*&#39;</span> source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>多个排除模式也可以利用 Bash 的大扩号的扩展功能，只用一个<code>--exclude</code>参数。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;file1.txt&#39;</span>,<span class="token string">&#39;dir1/*&#39;</span><span class="token punctuation">}</span> source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果排除模式很多，可以将它们写入一个文件，每个模式一行，然后用<code>--exclude-from</code>参数指定这个文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> --exclude-from<span class="token operator">=</span><span class="token string">&#39;exclude-file.txt&#39;</span> source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="include参数" tabindex="-1"><a class="header-anchor" href="#include参数" aria-hidden="true">#</a> <code>--include</code>参数</h3><p><code>--include</code>参数用来指定必须同步的文件模式，往往与<code>--exclude</code>结合使用。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">--include</span><span class="token operator">=</span><span class="token string">&quot;*.txt&quot;</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span><span class="token string">&#39;*&#39;</span> source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令指定同步时，排除所有文件，但是会包括 TXT 文件。</p><h2 id="远程同步" tabindex="-1"><a class="header-anchor" href="#远程同步" aria-hidden="true">#</a> 远程同步</h2><h3 id="ssh-协议" tabindex="-1"><a class="header-anchor" href="#ssh-协议" aria-hidden="true">#</a> SSH 协议</h3><p>rsync 除了支持本地两个目录之间的同步，也支持远程同步。它可以将本地内容，同步到远程服务器。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> source/ username@remote_host:destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以将远程内容同步到本地。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> username@remote_host:source/ destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>rsync 默认使用 SSH 进行远程登录和数据传输。</p><p>由于早期 rsync 不使用 SSH 协议，需要用<code>-e</code>参数指定协议，后来才改的。所以，下面<code>-e ssh</code>可以省略。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">-e</span> <span class="token function">ssh</span> source/ user@remote_host:/destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是，如果 ssh 命令有附加的参数，则必须使用<code>-e</code>参数指定所要执行的 SSH 命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;ssh -p 2234&#39;</span> source/ user@remote_host:/destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令中，<code>-e</code>参数指定 SSH 使用2234端口。</p><h3 id="rsync-协议" tabindex="-1"><a class="header-anchor" href="#rsync-协议" aria-hidden="true">#</a> rsync 协议</h3><p>除了使用 SSH，如果另一台服务器安装并运行了 rsync 守护程序，则也可以用<code>rsync://</code>协议（默认端口873）进行传输。具体写法是服务器与目标目录之间使用双冒号分隔<code>::</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> source/ <span class="token number">192.168</span>.122.32::module/destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意，上面地址中的<code>module</code>并不是实际路径名，而是 rsync 守护程序指定的一个资源名，由管理员分配。</p><p>如果想知道 rsync 守护程序分配的所有 module 列表，可以执行下面命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> rsync://192.168.122.32
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>rsync 协议除了使用双冒号，也可以直接用<code>rsync://</code>协议指定地址。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-av</span> source/ rsync://192.168.122.32/module/destination
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="增量备份" tabindex="-1"><a class="header-anchor" href="#增量备份" aria-hidden="true">#</a> 增量备份</h2><p>rsync 的最大特点就是它可以完成增量备份，也就是默认只复制有变动的文件。</p><p>除了源目录与目标目录直接比较，rsync 还支持使用基准目录，即将源目录与基准目录之间变动的部分，同步到目标目录。</p><p>具体做法是，第一次同步是全量备份，所有文件在基准目录里面同步一份。以后每一次同步都是增量备份，只同步源目录与基准目录之间有变动的部分，将这部分保存在一个新的目标目录。这个新的目标目录之中，也是包含所有文件，但实际上，只有那些变动过的文件是存在于该目录，其他没有变动的文件都是指向基准目录文件的硬链接。</p><p><code>--link-dest</code>参数用来指定同步时的基准目录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rsync</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">--delete</span> --link-dest /compare/path /source/path /target/path
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令中，<code>--link-dest</code>参数指定基准目录<code>/compare/path</code>，然后源目录<code>/source/path</code>跟基准目录进行比较，找出变动的文件，将它们拷贝到目标目录<code>/target/path</code>。那些没变动的文件则会生成硬链接。这个命令的第一次备份时是全量备份，后面就都是增量备份了。</p><p>下面是一个脚本示例，备份用户的主目录。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># A script to perform incremental backups using rsync</span>

<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> errexit
<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> nounset
<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> pipefail

<span class="token builtin class-name">readonly</span> <span class="token assign-left variable">SOURCE_DIR</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${<span class="token environment constant">HOME</span>}</span>&quot;</span>
<span class="token builtin class-name">readonly</span> <span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span><span class="token string">&quot;/mnt/data/backups&quot;</span>
<span class="token builtin class-name">readonly</span> <span class="token assign-left variable">DATETIME</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token string">&#39;+%Y-%m-%d_%H:%M:%S&#39;</span><span class="token variable">)</span></span>&quot;</span>
<span class="token builtin class-name">readonly</span> <span class="token assign-left variable">BACKUP_PATH</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${BACKUP_DIR}</span>/<span class="token variable">\${DATETIME}</span>&quot;</span>
<span class="token builtin class-name">readonly</span> <span class="token assign-left variable">LATEST_LINK</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${BACKUP_DIR}</span>/latest&quot;</span>

<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;<span class="token variable">\${BACKUP_DIR}</span>&quot;</span>

<span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token parameter variable">--delete</span> <span class="token punctuation">\\</span>
  <span class="token string">&quot;<span class="token variable">\${SOURCE_DIR}</span>/&quot;</span> <span class="token punctuation">\\</span>
  --link-dest <span class="token string">&quot;<span class="token variable">\${LATEST_LINK}</span>&quot;</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">--exclude</span><span class="token operator">=</span><span class="token string">&quot;.cache&quot;</span> <span class="token punctuation">\\</span>
  <span class="token string">&quot;<span class="token variable">\${BACKUP_PATH}</span>&quot;</span>

<span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token string">&quot;<span class="token variable">\${LATEST_LINK}</span>&quot;</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token string">&quot;<span class="token variable">\${BACKUP_PATH}</span>&quot;</span> <span class="token string">&quot;<span class="token variable">\${LATEST_LINK}</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面脚本中，每一次同步都会生成一个新目录<code>\${BACKUP_DIR}/\${DATETIME}</code>，并将软链接<code>\${BACKUP_DIR}/latest</code>指向这个目录。下一次备份时，就将<code>\${BACKUP_DIR}/latest</code>作为基准目录，生成新的备份目录。最后，再将软链接<code>\${BACKUP_DIR}/latest</code>指向新的备份目录。</p><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><p><code>-a</code>、<code>--archive</code>参数表示存档模式，保存所有的元数据，比如修改时间（modification time）、权限、所有者等，并且软链接也会同步过去。</p><p><code>--append</code>参数指定文件接着上次中断的地方，继续传输。</p><p><code>--append-verify</code>参数跟<code>--append</code>参数类似，但会对传输完成后的文件进行一次校验。如果校验失败，将重新发送整个文件。</p><p><code>-b</code>、<code>--backup</code>参数指定在删除或更新目标目录已经存在的文件时，将该文件更名后进行备份，默认行为是删除。更名规则是添加由<code>--suffix</code>参数指定的文件后缀名，默认是<code>~</code>。</p><p><code>--backup-dir</code>参数指定文件备份时存放的目录，比如<code>--backup-dir=/path/to/backups</code>。</p><p><code>--bwlimit</code>参数指定带宽限制，默认单位是 KB/s，比如<code>--bwlimit=100</code>。</p><p><code>-c</code>、<code>--checksum</code>参数改变<code>rsync</code>的校验方式。默认情况下，rsync 只检查文件的大小和最后修改日期是否发生变化，如果发生变化，就重新传输；使用这个参数以后，则通过判断文件内容的校验和，决定是否重新传输。</p><p><code>--delete</code>参数删除只存在于目标目录、不存在于源目标的文件，即保证目标目录是源目标的镜像。</p><p><code>-e</code>参数指定使用 SSH 协议传输数据。</p><p><code>--exclude</code>参数指定排除不进行同步的文件，比如<code>--exclude=&quot;*.iso&quot;</code>。</p><p><code>--exclude-from</code>参数指定一个本地文件，里面是需要排除的文件模式，每个模式一行。</p><p><code>--existing</code>、<code>--ignore-non-existing</code>参数表示不同步目标目录中不存在的文件和目录。</p><p><code>-h</code>参数表示以人类可读的格式输出。</p><p><code>-h</code>、<code>--help</code>参数返回帮助信息。</p><p><code>-i</code>参数表示输出源目录与目标目录之间文件差异的详细情况。</p><p><code>--ignore-existing</code>参数表示只要该文件在目标目录中已经存在，就跳过去，不再同步这些文件。</p><p><code>--include</code>参数指定同步时要包括的文件，一般与<code>--exclude</code>结合使用。</p><p><code>--link-dest</code>参数指定增量备份的基准目录。</p><p><code>-m</code>参数指定不同步空目录。</p><p><code>--max-size</code>参数设置传输的最大文件的大小限制，比如不超过200KB（<code>--max-size=&#39;200k&#39;</code>）。</p><p><code>--min-size</code>参数设置传输的最小文件的大小限制，比如不小于10KB（<code>--min-size=10k</code>）。</p><p><code>-n</code>参数或<code>--dry-run</code>参数模拟将要执行的操作，而并不真的执行。配合<code>-v</code>参数使用，可以看到哪些内容会被同步过去。</p><p><code>-P</code>参数是<code>--progress</code>和<code>--partial</code>这两个参数的结合。</p><p><code>--partial</code>参数允许恢复中断的传输。不使用该参数时，<code>rsync</code>会删除传输到一半被打断的文件；使用该参数后，传输到一半的文件也会同步到目标目录，下次同步时再恢复中断的传输。一般需要与<code>--append</code>或<code>--append-verify</code>配合使用。</p><p><code>--partial-dir</code>参数指定将传输到一半的文件保存到一个临时目录，比如<code>--partial-dir=.rsync-partial</code>。一般需要与<code>--append</code>或<code>--append-verify</code>配合使用。</p><p><code>--progress</code>参数表示显示进展。</p><p><code>-r</code>参数表示递归，即包含子目录。</p><p><code>--remove-source-files</code>参数表示传输成功后，删除发送方的文件。</p><p><code>--size-only</code>参数表示只同步大小有变化的文件，不考虑文件修改时间的差异。</p><p><code>--suffix</code>参数指定文件名备份时，对文件名添加的后缀，默认是<code>~</code>。</p><p><code>-u</code>、<code>--update</code>参数表示同步时跳过目标目录中修改时间更新的文件，即不同步这些有更新的时间戳的文件。</p><p><code>-v</code>参数表示输出细节。<code>-vv</code>表示输出更详细的信息，<code>-vvv</code>表示输出最详细的信息。</p><p><code>--version</code>参数返回 rsync 的版本。</p><p><code>-z</code>参数指定同步时压缩数据。</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,118),p={href:"https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.howtoforge.com/mirroring_with_rsync",target:"_blank",rel:"noopener noreferrer"},v={href:"https://linuxconfig.org/examples-on-how-to-use-rsync-for-local-and-remote-data-backups-and-synchonization",target:"_blank",rel:"noopener noreferrer"},b={href:"https://linuxconfig.org/how-to-create-incremental-backups-using-rsync-on-linux",target:"_blank",rel:"noopener noreferrer"};function m(h,k){const s=o("ExternalLinkIcon");return d(),i("div",null,[l,e("ul",null,[e("li",null,[e("a",p,[a("How To Use Rsync to Sync Local and Remote Directories on a VPS"),n(s)]),a(", Justin Ellingwood")]),e("li",null,[e("a",u,[a("Mirror Your Web Site With rsync"),n(s)]),a(", Falko Timme")]),e("li",null,[e("a",v,[a("Examples on how to use Rsync"),n(s)]),a(", Egidio Docile")]),e("li",null,[e("a",b,[a("How to create incremental backups using rsync on Linux"),n(s)]),a(", Egidio Docile")])])])}const y=c(t,[["render",m],["__file","rsync.html.vue"]]);export{y as default};
