import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c,a as n,b as s,d as l,e as i}from"./app-bede4f5a.js";const o={},d=i(`<h1 id="打印样式" tabindex="-1"><a class="header-anchor" href="#打印样式" aria-hidden="true">#</a> 打印样式</h1><h2 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法" aria-hidden="true">#</a> 基本用法</h2><p><code>@media print</code>命令可以设置打印样式，即用户选择打印当前网页时，生效的 CSS 规则。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>
  <span class="token selector">h1</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 16pt<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码设置的<code>h1</code>样式，对屏幕浏览不产生效果，只有用户打印网页时才会生效。</p><p><code>@media print</code>命令可以与正常样式规则混合使用。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span> <span class="token punctuation">{</span> <span class="token property">margin</span><span class="token punctuation">:</span> 1em 0<span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>
  <span class="token selector">.related-articles</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>p</code>元素的样式对屏幕浏览和打印都有效，<code>.related-articles</code>的样式只对打印有效。</p><p>如果要设置某些规则只对屏幕浏览有效，可以像下面这样写。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 只对屏幕浏览有效 */</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 只对打印有效 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分页符" tabindex="-1"><a class="header-anchor" href="#分页符" aria-hidden="true">#</a> 分页符</h2><p>分页符属性用来设置页面的分页（即另起一页），共有三个相关属性。</p><ul><li>page-break-before：元素之前分页</li><li>page-break-after：元素之后分页</li><li>page-break-inside：元素内部分页</li></ul><p>这三个属性的值都是两个：<code>always</code>（生效）和<code>avoid</code>（避免）。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 总是在 h1 元素之前分页 */</span>
  <span class="token property">page-break-before</span><span class="token punctuation">:</span> always<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">section.city-map</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 在元素之前和之后分页，即该元素单独占据一页 */</span>
  <span class="token property">page-break-before</span><span class="token punctuation">:</span> always<span class="token punctuation">;</span>
  <span class="token property">page-break-after</span><span class="token punctuation">:</span> always<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">table</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 表格尽可能不要分页 */</span>
  <span class="token property">page-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="orphans-属性-widow-属性" tabindex="-1"><a class="header-anchor" href="#orphans-属性-widow-属性" aria-hidden="true">#</a> orphans 属性，widow 属性</h2><p><code>orphans</code>属性和<code>widow</code>属性设置某个元素如何跨页拆分。</p><p><code>orphans</code>属性设置跨页前的行数少于多少行时，所有行都移到下一页打印。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span> <span class="token punctuation">{</span>
  <span class="token property">orphans</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码设置，如果某个段落出现在上一页的结尾少于3行（比如只有两行），那么该段落全部移到下一页显示。</p><p><code>widow</code>属性设置出现在新页面的行数，最少应该有几行。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span> <span class="token punctuation">{</span>
  <span class="token property">widow</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码设置，如果某个段落出现在新页面的开头少于两行（比如只有一行），那么该段落全部移到上一页显示。</p><h2 id="page-命令" tabindex="-1"><a class="header-anchor" href="#page-命令" aria-hidden="true">#</a> @page 命令</h2><p><code>@page</code>命令主要用来定义页面距。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 2cm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，还可以用<code>:first</code>、<code>:last</code>、<code>:left</code>、<code>:right</code>和<code>:blank</code>选择器，选中特殊页面。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@page</span><span class="token punctuation">:</span>first</span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码设置第一页的页边距为<code>0</code>。</p><h2 id="技巧" tabindex="-1"><a class="header-anchor" href="#技巧" aria-hidden="true">#</a> 技巧</h2><h3 id="重复表格的表头" tabindex="-1"><a class="header-anchor" href="#重复表格的表头" aria-hidden="true">#</a> 重复表格的表头</h3><p>如果希望打印表格的时候，每一页都出现表头，只需要使用<code>&lt;thead&gt;</code>元素定义表头，<code>&lt;tbody&gt;</code>元素定义表的数据部分即可。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>City<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Population<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Sydney<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>4.627 million (2018)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，如果表格跨页，表头的<code>City</code>和<code>Population</code>字段会在每一页都打印出来。</p><h3 id="打印链接的网址" tabindex="-1"><a class="header-anchor" href="#打印链接的网址" aria-hidden="true">#</a> 打印链接的网址</h3><p>如果希望打印出链接的网址，可以使用<code>:after</code>伪元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>
  <span class="token selector">a[href]:after</span> <span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;(&quot;</span> <span class="token function">attr</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,38),u={href:"https://www.paperplane.app/blog/print-css-basics/",target:"_blank",rel:"noopener noreferrer"};function r(k,v){const a=t("ExternalLinkIcon");return p(),c("div",null,[d,n("ul",null,[n("li",null,[n("a",u,[s("Print CSS basics in 10 minutes"),l(a)]),s(", Paperplay")])])])}const b=e(o,[["render",r],["__file","print.html.vue"]]);export{b as default};
