const e=JSON.parse('{"key":"v-5c7d7cba","path":"/typescript-tutorial/class.html","title":"TypeScript 的 class 类型","lang":"zh-CN","frontmatter":{"description":"简介 类（class）是面向对象编程的基本构件，封装了属性和方法，TypeScript 给予了全面支持。 属性的类型 类的属性可以在顶层声明，也可以在构造方法内部声明。 对于顶层声明的属性，可以在声明时同时给出类型。 上面声明中，属性x和`y的类型都是number。 如果不给出类型，TypeScript 会认为x`和y的类型都是any。 上面示例中，x...","head":[["meta",{"property":"og:url","content":"https://yzqbooks.github.io/wangdoc/wangdoc/typescript-tutorial/class.html"}],["meta",{"property":"og:site_name","content":"wangdoc"}],["meta",{"property":"og:title","content":"TypeScript 的 class 类型"}],["meta",{"property":"og:description","content":"简介 类（class）是面向对象编程的基本构件，封装了属性和方法，TypeScript 给予了全面支持。 属性的类型 类的属性可以在顶层声明，也可以在构造方法内部声明。 对于顶层声明的属性，可以在声明时同时给出类型。 上面声明中，属性x和`y的类型都是number。 如果不给出类型，TypeScript 会认为x`和y的类型都是any。 上面示例中，x..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-04T22:02:06.000Z"}],["meta",{"property":"article:author","content":"yzqdev"}],["meta",{"property":"article:modified_time","content":"2023-09-04T22:02:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript 的 class 类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-04T22:02:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[{"level":3,"title":"属性的类型","slug":"属性的类型","link":"#属性的类型","children":[]},{"level":3,"title":"readonly 修饰符","slug":"readonly-修饰符","link":"#readonly-修饰符","children":[]},{"level":3,"title":"方法的类型","slug":"方法的类型","link":"#方法的类型","children":[]},{"level":3,"title":"存取器方法","slug":"存取器方法","link":"#存取器方法","children":[]},{"level":3,"title":"属性索引","slug":"属性索引","link":"#属性索引","children":[]}]},{"level":2,"title":"类的 interface 接口","slug":"类的-interface-接口","link":"#类的-interface-接口","children":[{"level":3,"title":"implements 关键字","slug":"implements-关键字","link":"#implements-关键字","children":[]},{"level":3,"title":"实现多个接口","slug":"实现多个接口","link":"#实现多个接口","children":[]},{"level":3,"title":"类与接口的合并","slug":"类与接口的合并","link":"#类与接口的合并","children":[]}]},{"level":2,"title":"Class 类型","slug":"class-类型","link":"#class-类型","children":[{"level":3,"title":"实例类型","slug":"实例类型","link":"#实例类型","children":[]},{"level":3,"title":"类的自身类型","slug":"类的自身类型","link":"#类的自身类型","children":[]},{"level":3,"title":"结构类型原则","slug":"结构类型原则","link":"#结构类型原则","children":[]}]},{"level":2,"title":"类的继承","slug":"类的继承","link":"#类的继承","children":[]},{"level":2,"title":"可访问性修饰符","slug":"可访问性修饰符","link":"#可访问性修饰符","children":[{"level":3,"title":"public","slug":"public","link":"#public","children":[]},{"level":3,"title":"private","slug":"private","link":"#private","children":[]},{"level":3,"title":"protected","slug":"protected","link":"#protected","children":[]},{"level":3,"title":"实例属性的简写形式","slug":"实例属性的简写形式","link":"#实例属性的简写形式","children":[]}]},{"level":2,"title":"静态成员","slug":"静态成员","link":"#静态成员","children":[]},{"level":2,"title":"泛型类","slug":"泛型类","link":"#泛型类","children":[]},{"level":2,"title":"抽象类，抽象成员","slug":"抽象类-抽象成员","link":"#抽象类-抽象成员","children":[]},{"level":2,"title":"this 问题","slug":"this-问题","link":"#this-问题","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1693864926000,"updatedTime":1693864926000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":30.31,"words":9092},"filePathRelative":"typescript-tutorial/class.md","localizedDate":"2023年9月4日","autoDesc":true,"excerpt":""}');export{e as data};
