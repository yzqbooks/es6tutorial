const e=JSON.parse('{"key":"v-6f33be5b","path":"/typescript-tutorial/generics.html","title":"TypeScript 泛型","lang":"zh-CN","frontmatter":{"description":"简介 有些时候，函数返回值的类型与参数类型是相关的。 上面示例中，函数getFirst()总是返回参数数组的第一个成员。参数数组是什么类型，返回值就是什么类型。 这个函数的类型声明只能写成下面这样。 上面的类型声明，就反映不出参数与返回值之间的类型关系。 为了解决这个问题，TypeScript 就引入了“泛型”（generics）。泛型的特点就是带有“...","head":[["meta",{"property":"og:url","content":"https://yzqbooks.github.io/wangdoc/wangdoc/typescript-tutorial/generics.html"}],["meta",{"property":"og:site_name","content":"wangdoc"}],["meta",{"property":"og:title","content":"TypeScript 泛型"}],["meta",{"property":"og:description","content":"简介 有些时候，函数返回值的类型与参数类型是相关的。 上面示例中，函数getFirst()总是返回参数数组的第一个成员。参数数组是什么类型，返回值就是什么类型。 这个函数的类型声明只能写成下面这样。 上面的类型声明，就反映不出参数与返回值之间的类型关系。 为了解决这个问题，TypeScript 就引入了“泛型”（generics）。泛型的特点就是带有“..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-04T22:02:06.000Z"}],["meta",{"property":"article:author","content":"yzqdev"}],["meta",{"property":"article:modified_time","content":"2023-09-04T22:02:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript 泛型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-04T22:02:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yzqdev\\",\\"url\\":\\"http://www.yzqdev.top\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"泛型的写法","slug":"泛型的写法","link":"#泛型的写法","children":[{"level":3,"title":"函数的泛型写法","slug":"函数的泛型写法","link":"#函数的泛型写法","children":[]},{"level":3,"title":"接口的泛型写法","slug":"接口的泛型写法","link":"#接口的泛型写法","children":[]},{"level":3,"title":"类的泛型写法","slug":"类的泛型写法","link":"#类的泛型写法","children":[]},{"level":3,"title":"类型别名的泛型写法","slug":"类型别名的泛型写法","link":"#类型别名的泛型写法","children":[]}]},{"level":2,"title":"类型参数的默认值","slug":"类型参数的默认值","link":"#类型参数的默认值","children":[]},{"level":2,"title":"数组的泛型表示","slug":"数组的泛型表示","link":"#数组的泛型表示","children":[]},{"level":2,"title":"类型参数的约束条件","slug":"类型参数的约束条件","link":"#类型参数的约束条件","children":[]},{"level":2,"title":"使用注意点","slug":"使用注意点","link":"#使用注意点","children":[]}],"git":{"createdTime":1693864926000,"updatedTime":1693864926000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":12.88,"words":3865},"filePathRelative":"typescript-tutorial/generics.md","localizedDate":"2023年9月4日","autoDesc":true,"excerpt":""}');export{e as data};
