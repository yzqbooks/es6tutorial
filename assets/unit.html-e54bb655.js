import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as i,a as s,b as n,d as e,e as p}from"./app-bede4f5a.js";const l={},d=p(`<h1 id="css的单位" tabindex="-1"><a class="header-anchor" href="#css的单位" aria-hidden="true">#</a> CSS的单位</h1><h2 id="inherit" tabindex="-1"><a class="header-anchor" href="#inherit" aria-hidden="true">#</a> inherit</h2><p>大多数 CSS 属性默认继承它的父元素的设定，但是有一些属性默认不继承。比如，<code>input</code>元素和<code>textarea</code>元素的 CSS 属性，都是不继承父元素的。这时，可以强制它们继承。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">html</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 125%<span class="token punctuation">;</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> sans-serif<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #222<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，首先强制所有元素的<code>font-family</code>、<code>line-height</code>和<code>color</code>属性都继承父元素，然后在网页的根元素<code>html</code>上设置具体的值。</p><h2 id="em" tabindex="-1"><a class="header-anchor" href="#em" aria-hidden="true">#</a> em</h2><p><code>em</code>是一种相对单位，<code>1em</code>等于当前元素的<code>font-size</code>。一般来说，浏览器默认的字体大小是16像素，所以<code>1em</code>默认等于16像素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 20px <span class="token punctuation">}</span> <span class="token comment">/* 1em = 20px */</span>
<span class="token selector">p</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 16px <span class="token punctuation">}</span> <span class="token comment">/* 1em = 16px */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，对于<code>h1</code>元素，<code>1em</code>相当于<code>20px</code>；对于<code>p</code>元素，<code>1em</code>相当于<code>16px</code>。</p><p>如果当前元素没有指定字体的像素大小，那么<code>1em</code>等于父元素字体的像素大小。这一点非常重要，务必牢记。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 16px <span class="token punctuation">}</span>
<span class="token selector">h1</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 2em <span class="token punctuation">}</span> <span class="token comment">/* 16px * 2 = 32px */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>h1</code>元素的字体大小是<code>2em</code>，但是它没有指定像素字体大小，因此<code>2em</code>等于2倍的父元素像素字体大小，也就是<code>32px</code>。</p><p><code>em</code>的一大好处是，很容易保持不同元素之间的比例关系，因此它比像素单位更合适用来设定字体大小。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">h1</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">p</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>h1</code>的字体大小就是<code>p</code>的2倍。</p><p>整个网页的字体大小，如果全部使用<code>em</code>单位，不使用像素单位，会引发一个问题。<code>em</code>将会基于父元素计算，从而出现累积效应。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">/* 默认是 16px */</span>
<span class="token selector">div</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">/* 字体大小 32px */</span>
<span class="token selector">p</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">/* 字体大小 32px */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>html</code>是<code>div</code>的父元素，所以<code>div</code>的<code>1em</code>是基于<code>html</code>计算的，因此<code>2em</code>字体大小等于<code>32px</code>。另一方面，<code>div</code>是<code>p</code>的父元素，所以<code>p</code>的<code>1em</code>实际上也是<code>32px</code>。</p><p>除了字体大小，其他许多属性也可以使用<code>em</code>，比如<code>margin</code>和<code>padding</code>，相当于间接由<code>font-size</code>决定。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.header</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0.5em 0.75em<span class="token punctuation">;</span> <span class="token comment">/* 相当于 8px 12px */</span>
  <span class="token property">background</span><span class="token punctuation">:</span> #7F7CFF<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>.header</code>元素的字体大小是<code>16px</code>，因此<code>1em</code>等于<code>16px</code>，所以<code>padding</code>就相当于<code>8px 12px</code>。</p><p>这里比较混淆的是，如果<code>font-size</code>也使用<code>em</code>，两者的计算基点是不一样的。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span> <span class="token comment">/* 1em = 16px */</span>
  padding： 1em<span class="token punctuation">;</span>  <span class="token comment">/* 1em = 32px */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>font-size</code>是基于父元素计算的，如果父元素的字体大小是<code>16px</code>，那么<code>font-size</code>就是<code>32px</code>；<code>padding</code>是基于<code>font-size</code>计算的，由于<code>h1</code>的<code>font-size</code>是<code>32px</code>，所以<code>padding</code>就是<code>32px</code>。</p><p>由于以上的累积效应和计算基点差异的原因，造成<code>em</code>不容易精确控制，实际开发中往往改用<code>rem</code>。</p><h2 id="rem" tabindex="-1"><a class="header-anchor" href="#rem" aria-hidden="true">#</a> rem</h2><p><code>rem</code>单位与<code>em</code>几乎完全一致，只有一个差异，它总是等于根元素<code>&lt;html&gt;</code>的<code>font-size</code>大小，与当前元素或父元素的设置无关，这就避免了<code>em</code>的缺陷。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span> <span class="token comment">/* 1rem = 16px */</span>
  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">p</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span> <span class="token comment">/* 1rem = 16px */</span>
  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，不管<code>&lt;h1&gt;</code>和<code>&lt;p&gt;</code>在什么位置，<code>1rem</code>的大小总是不变的。</p>`,29),u=s("code",null,"rem",-1),r=s("code",null,"em",-1),k={href:"https://zellwk.com/blog/rem-vs-em/",target:"_blank",rel:"noopener noreferrer"},m=s("code",null,"font-size",-1),v=s("code",null,"rem",-1),h=s("code",null,"em",-1),b=p(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">button</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 0.875rem<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> .5em 1em<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> .125em solid #e3e3e3<span class="token punctuation">;</span>
  <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 48rem<span class="token punctuation">)</span></span><span class="token punctuation">{</span> <span class="token comment">/* min-width: 768px */</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.125rem<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 62rem<span class="token punctuation">)</span></span><span class="token punctuation">{</span> <span class="token comment">/* min-width: 992px */</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.375rem<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，随着屏幕宽度的变化，字体大小会跟着改变，<code>padding</code>和<code>border</code>会始终保持比例关系。</p><h2 id="vh-vw" tabindex="-1"><a class="header-anchor" href="#vh-vw" aria-hidden="true">#</a> vh，vw</h2><p><code>vh</code>表示百分之一的浏览器视口高度，<code>vw</code>表示百分之一的浏览器视口宽度。每当视口的高度和宽度发生变化，它们就会自动重新计算。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 3vw<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面代码中，如果视口宽度增加，字体大小也会增加；视口宽度减小，字体大小也会减小。但是，如果宽度太小（比如<code>320px</code>），这样算出来的字体会太小（<code>3px</code>）；如果宽度太大（比如<code>1440px</code>），字体又会太大（<code>43px</code>）。因此，可以考虑使用<code>calc</code>函数。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>18px + 0.25vw<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="vmin-vmax" tabindex="-1"><a class="header-anchor" href="#vmin-vmax" aria-hidden="true">#</a> vmin，vmax</h2><p><code>vmin</code>表示<code>vh</code>与<code>vw</code>之中较短的那个单位，<code>vmax</code>则表示较长的那个单位。</p><p>一般来说，PC的屏幕是屏宽大于屏高，手机的屏幕是屏高大于屏宽。所以，很可能会出现，某一个区域在PC屏幕中宽度较小，在手机屏幕中宽度较大。这时，这两个单位就可以派上用处了。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 20vmin<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，上面的<code>h1</code>使用<code>vmin</code>单位时，当宽屏设备的视口宽度缩小时，它的字体大小是不变的，因为视口的高度没有改变。</p><h2 id="ch" tabindex="-1"><a class="header-anchor" href="#ch" aria-hidden="true">#</a> ch</h2><p><code>ch</code>表示多少个字符。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">width</span><span class="token punctuation">:</span> 40ch<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面代码表示宽度为40个字符。</p><h2 id="calc" tabindex="-1"><a class="header-anchor" href="#calc" aria-hidden="true">#</a> calc()</h2><p>calc方法用于计算值，常用于两种不同的单位之间的计算（比如百分比和绝对长度）。</p><p>实例1。每行放置4张图片，可以采用如下的代码。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">img</span> <span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>25% - 20px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实例2。动态排列图片，可以配合media query。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>
<span class="token selector">img</span> <span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% * 1 / 4 - 20px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">img</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% * 1 / 3 - 20px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">img</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% * 1 / 2 - 20px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">img</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 20px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="attr" tabindex="-1"><a class="header-anchor" href="#attr" aria-hidden="true">#</a> attr()</h2><p>attr()用于读取网页元素的属性值。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div[data-line]:after</span> <span class="token punctuation">{</span> 
	<span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;[line &quot;</span> <span class="token function">attr</span><span class="token punctuation">(</span>data-line<span class="token punctuation">)</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,26),g={href:"http://zellwk.com/blog/rem-vs-em/",target:"_blank",rel:"noopener noreferrer"};function x(f,y){const a=t("ExternalLinkIcon");return o(),i("div",null,[d,s("p",null,[n("那么，何时使用"),u,n("，何时使用"),r,n("呢？一个"),s("a",k,[n("规则"),e(a)]),n("是字体大小"),m,n("属性使用"),v,n("，其他必须等比例缩放的属性使用"),h,n("。下面是一个例子。")]),b,s("ul",null,[s("li",null,[n("Zell, "),s("a",g,[n("REM vs EM – The Great Debate"),e(a)])])])])}const w=c(l,[["render",x],["__file","unit.html.vue"]]);export{w as default};
