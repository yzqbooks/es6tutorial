import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as i,c as o,a,b as e,d as c,e as l}from"./app-bede4f5a.js";const p={},d=l(`<h1 id="文本" tabindex="-1"><a class="header-anchor" href="#文本" aria-hidden="true">#</a> 文本</h1><h2 id="direction" tabindex="-1"><a class="header-anchor" href="#direction" aria-hidden="true">#</a> direction</h2><p><code>direction</code>属性设置块级元素内部的文本阅读方向。</p><p>它的默认值是<code>ltr</code>（从左到右），适用于大部分语言。它还可以设成<code>rtl</code>（从右到左）。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">blockquote</span> <span class="token punctuation">{</span>
  <span class="token property">direction</span><span class="token punctuation">:</span> rtl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般采用 HTML 语言的<code>dir</code>属性控制文本阅读方向，而不是使用这个属性。</p><h2 id="text-align" tabindex="-1"><a class="header-anchor" href="#text-align" aria-hidden="true">#</a> text-align</h2><p><code>text-align</code>属性设置块级元素内部的文本对齐方式。</p><p>它可以取以下值。</p><ul><li>left：默认值，文本向左对齐</li><li>right：右对齐</li><li>center：居中对齐</li><li>justify：两端对齐，除了最后一行是左对齐。</li><li>inherit：继承父元素的值</li><li>start：<code>direction</code>属性为从左到右时，为左对齐；从右到左时，为右对齐</li><li>end：<code>direction</code>属性为从左到右时，为右对齐；从右到左时，为左对齐</li></ul><h2 id="vertical-align" tabindex="-1"><a class="header-anchor" href="#vertical-align" aria-hidden="true">#</a> vertical-align</h2><p><code>vertical-align</code>设置一个元素与在同一条水平线上的其他元素如何对齐。这些元素需要都是<code>inline</code>。它可以取以下值。</p><ul><li>baseline：对齐父元素的基线，默认值</li><li>length: 升高或降低特定的长度，可使用负值</li><li>%：升高或降低<code>line-height</code>的百分比，不允许负值</li><li>sub：设为下标</li><li>super：设为上标</li><li>top: 当前元素的顶部对齐最高元素的顶边</li><li>text-top：当前元素的顶部对齐父元素字体的顶部</li><li>middle：元素位于父元素的垂直中部</li><li>bottom：当前元素的底部对齐本行最低元素的底部</li><li>text-bottom：当前元素的底部，对齐父元素字体的底部</li><li>initial：设置为默认值</li><li>inherit：继承父元素的值</li></ul><p>这个属性通常用于同一行的图标与文字的对齐。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个命令对设为<code>display: table-cell</code>的元素也有效，可以控制元素在单元格之中的垂直对齐方式。这时，一般使用<code>top</code>、<code>middle</code>和<code>bottom</code>等值。</p><h2 id="tab-size" tabindex="-1"><a class="header-anchor" href="#tab-size" aria-hidden="true">#</a> tab-size</h2><p><code>tab-size</code>属性设置 Tab 键的宽度，可以设置为整数（表示多少个空格），也可以设置为具体的长度单位。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 整数植 */</span>
<span class="token property">tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span>
<span class="token property">tab-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>

<span class="token comment">/* 长度单位 */</span>
<span class="token property">tab-size</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token property">tab-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该属性常用于<code>&lt;pre&gt;</code>标签之中。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">pre</span> <span class="token punctuation">{</span><span class="token property">-moz-tab-size</span><span class="token punctuation">:</span> 16<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/* Code for Firefox */</span>
<span class="token selector">pre</span> <span class="token punctuation">{</span><span class="token property">-o-tab-size</span><span class="token punctuation">:</span> 16<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/* Code for Opera 10.6-12.1 */</span>
<span class="token selector">pre</span> <span class="token punctuation">{</span><span class="token property">tab-size</span><span class="token punctuation">:</span> 16<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="word-wrap" tabindex="-1"><a class="header-anchor" href="#word-wrap" aria-hidden="true">#</a> word-wrap</h2><p><code>word-wrap</code>的正式名称是<code>overflow-wrap</code>，用于规定是否可以在一个词内部断行，避免溢出容器。</p><p>它可以取两个值。</p><ul><li>normal：只在可以断行的地方断行。</li><li>break-word：可以在任意点断行，避免某个词过长，发生溢出。</li></ul><h2 id="word-break" tabindex="-1"><a class="header-anchor" href="#word-break" aria-hidden="true">#</a> word-break</h2><p><code>word-break</code>用于规定是否可以在词内断行。</p><p>它可以取三个值。</p><ul><li>normal：使用浏览器默认的断行规则</li><li>break-all：对于非 CJK 字符，可以任意字符之间断行。</li><li>keep-all：对于 CJK 字符不允许换行。非 CJK 字符与<code>normal</code>相同。</li></ul><h2 id="hyphens" tabindex="-1"><a class="header-anchor" href="#hyphens" aria-hidden="true">#</a> hyphens</h2><p>浏览器打开连字号功能，需要两个步骤。第一个步骤是设置文本的语言。这将告诉浏览器使用哪个连字词典，正确的自动连字需要一个适合文本语言的连字词典。如果浏览器不知道文本的语言，即使打开 CSS 设置也不会自动连词。</p><p>设置网页语言，应该使用<code>&lt;html&gt;</code>标签的<code>lang</code>属性。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>CSS 里面使用自动连词，要开启<code>hyphens</code>属性。<code>hyphens</code>属性控制块级元素之中，文本是否显示连词线。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">hyphens</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>hyphens</code>属性可以取以下三个值。</p><p>（1） none</p><p><code>none</code>表示一个词不会在断行处被拆开，即断行处不会有连词线。</p><p>（2）manual</p><p><code>manual</code>表示只有在一个词内部的字符表示可以有连词线时，才会在断行处拆开。断行处，会有连词线。</p><p>两个字符可以表示此处可以断行，并显示连词线，一个是<code>-</code>(U+2010)，表示此处可以有一个可见的断行，即使不在此处断行，这里也会有连词线显示；另一个是<code>U+00AD</code>，表示不可见的断行，HTML 文档里面可以用<code>&amp;shy;</code>插入。</p><p>（3）auto</p><p><code>auto</code>表示浏览器决定一个词是否可以在断行处拆开，以及是否会有连词线。</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,44),r={href:"http://clagnut.com/blog/2395",target:"_blank",rel:"noopener noreferrer"};function u(h,m){const n=t("ExternalLinkIcon");return i(),o("div",null,[d,a("ul",null,[a("li",null,[a("a",r,[e("All you need to know about hyphenation in CSS"),c(n)]),e(", Richard Rutter")])])])}const v=s(p,[["render",u],["__file","text.html.vue"]]);export{v as default};
