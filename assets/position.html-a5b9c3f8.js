import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as p,a as s,b as n,d as e,e as t}from"./app-bede4f5a.js";const l={},d=t(`<h1 id="position" tabindex="-1"><a class="header-anchor" href="#position" aria-hidden="true">#</a> position</h1><p><code>position</code>属性用来指定一个元素在网页上的位置，一共有5种定位方式，即<code>position</code>属性主要有五个值。</p><blockquote><ul><li><code>static</code></li><li><code>relative</code></li><li><code>fixed</code></li><li><code>absolute</code></li><li><code>sticky</code></li></ul></blockquote><p>下面就依次介绍这五个值。</p><h2 id="static-属性值" tabindex="-1"><a class="header-anchor" href="#static-属性值" aria-hidden="true">#</a> static 属性值</h2><p><code>static</code>是<code>position</code>属性的默认值。如果省略<code>position</code>属性，浏览器就认为该元素是<code>static</code>定位。</p><p>这时，浏览器会按照源码的顺序，决定每个元素的位置，这称为“正常的页面流”（normal flow）。每个块级元素占据自己的区块（block），元素与元素之间不产生重叠，这个位置就是元素的默认位置。</p><p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111720.jpg" alt=""></p><p>注意，<code>static</code>定位所导致的元素位置，是浏览器自主决定的，所以这时<code>top</code>、<code>bottom</code>、<code>left</code>、<code>right</code>这四个属性无效。</p><h2 id="relative-absolute-fixed" tabindex="-1"><a class="header-anchor" href="#relative-absolute-fixed" aria-hidden="true">#</a> relative，absolute，fixed</h2><p><code>relative</code>、<code>absolute</code>、<code>fixed</code>这三个属性值有一个共同点，都是相对于某个基点的定位，不同之处仅仅在于基点不同。所以，只要理解了它们的基点是什么，就很容易掌握这三个属性值。</p><p>这三种定位都不会对其他元素的位置产生影响，即不管有没有这个元素，其他元素的位置不变，因此元素之间可能产生重叠。</p><h3 id="relative-属性值" tabindex="-1"><a class="header-anchor" href="#relative-属性值" aria-hidden="true">#</a> relative 属性值</h3><p><code>relative</code>表示，相对于默认位置（即<code>static</code>时的位置）进行偏移，即定位基点是元素的默认位置。</p><p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111721.jpg" alt=""></p><p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111722.jpg" alt=""></p><p>它必须搭配<code>top</code>、<code>bottom</code>、<code>left</code>、<code>right</code>这四个属性一起使用，用来指定偏移的方向和距离。</p><p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111723.jpg" alt=""></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>div</code>元素从默认位置向下偏移<code>20px</code>（即距离顶部<code>20px</code>）。</p><h3 id="absolute-属性值" tabindex="-1"><a class="header-anchor" href="#absolute-属性值" aria-hidden="true">#</a> absolute 属性值</h3><p><code>absolute</code>表示，相对于祖先元素（一般是父元素）进行偏移，即定位基点通常是父元素。</p><p>它有一个重要的限制条件：父元素不能是<code>static</code>定位，否则定位基点会移到最近一个非<code>static</code>定位的祖先元素。如果所有祖先元素都是<code>static</code>定位，定位基点就变成整个网页的根元素<code>html</code>。另外，<code>absolute</code>定位也必须搭配<code>top</code>、<code>bottom</code>、<code>left</code>、<code>right</code>这四个属性一起使用。</p><p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111801.jpg" alt=""></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*
  HTML 代码如下
  &lt;div id=&quot;father&quot;&gt;
    &lt;div id=&quot;son&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
*/</span>

<span class="token selector">#father</span> <span class="token punctuation">{</span>
  <span class="token property">positon</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">#son</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，父元素是<code>relative</code>定位，子元素是<code>absolute</code>定位，所以子元素的定位基点是父元素，相对于父元素的顶部向下偏移<code>20px</code>。如果父元素是<code>static</code>定位，上例的子元素就是距离网页的顶部向下偏移<code>20px</code>。</p><p>注意，<code>absolute</code>定位的元素会被“正常页面流”忽略，即在“正常页面流”中，该元素所占空间为零，周边元素不受影响。</p><h3 id="fixed-属性值" tabindex="-1"><a class="header-anchor" href="#fixed-属性值" aria-hidden="true">#</a> fixed 属性值</h3><p><code>fixed</code>表示，相对于视口（viewport，浏览器窗口）进行偏移，即定位基点是浏览器窗口。这会导致元素的位置不随页面滚动而变化，好像固定在网页上一样。</p><p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111802.jpg" alt=""></p><p>它如果搭配<code>top</code>、<code>bottom</code>、<code>left</code>、<code>right</code>这四个属性一起使用，表示元素的初始位置是基于视口计算的，否则初始位置就是元素的默认位置。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>div</code>元素始终在视口顶部，不随网页滚动而变化。</p><h2 id="四、sticky-属性值" tabindex="-1"><a class="header-anchor" href="#四、sticky-属性值" aria-hidden="true">#</a> 四、sticky 属性值</h2><p><code>sticky</code>跟前面四个属性值都不一样，它会产生动态效果，很像<code>relative</code>和<code>fixed</code>的结合：一些时候是<code>relative</code>定位（定位基点是自身默认位置），另一些时候自动变成<code>fixed</code>定位（定位基点是视口）。</p><p>因此，它能够形成“动态固定”的效果。比如，网页的搜索工具栏，初始加载时在自己的默认位置（<code>relative</code>定位）。</p><p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111604.jpg" alt=""></p><p>页面向下滚动时，工具栏变成固定位置，始终停留在页面头部（<code>fixed</code>定位）。</p><p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111605.jpg" alt=""></p><p>等到页面重新向上滚动回到原位，工具栏也会回到默认位置。</p><p><code>sticky</code>生效的前提是，必须搭配<code>top</code>、<code>bottom</code>、<code>left</code>、<code>right</code>这四个属性一起使用，不能省略，否则等同于<code>relative</code>定位，不产生“动态固定”的效果。原因是这四个属性用来定义“偏移距离”，浏览器把它当作<code>sticky</code>的生效门槛。</p><p>它的具体规则是，当页面滚动，父元素开始脱离视口时（即部分不可见），只要与<code>sticky</code>元素的距离达到生效门槛，<code>relative</code>定位自动切换为<code>fixed</code>定位；等到父元素完全脱离视口时（即完全不可见），<code>fixed</code>定位自动切换回<code>relative</code>定位。</p><p>请看下面的示例代码。（注意，除了已被淘汰的 IE 以外，其他浏览器目前都支持<code>sticky</code>。但是，Safari 浏览器需要加上浏览器前缀<code>-webkit-</code>。）</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#toolbar</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> -webkit-sticky<span class="token punctuation">;</span> <span class="token comment">/* safari 浏览器 */</span>
  <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span> <span class="token comment">/* 其他浏览器 */</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，页面向下滚动时，<code>#toolbar</code>的父元素开始脱离视口，一旦视口的顶部与<code>#toolbar</code>的距离小于<code>20px</code>（门槛值），<code>#toolbar</code>就自动变为<code>fixed</code>定位，保持与视口顶部<code>20px</code>的距离。页面继续向下滚动，父元素彻底离开视口（即整个父元素完全不可见），<code>#toolbar</code>恢复成<code>relative</code>定位。</p><h2 id="五、-sticky-的应用" tabindex="-1"><a class="header-anchor" href="#五、-sticky-的应用" aria-hidden="true">#</a> 五、 sticky 的应用</h2><p><code>sticky</code>定位可以实现一些很有用的效果。除了上面提到“动态固定”效果，这里再介绍两个。</p><h2 id="_5-1-堆叠效果" tabindex="-1"><a class="header-anchor" href="#_5-1-堆叠效果" aria-hidden="true">#</a> 5.1 堆叠效果</h2>`,48),u={href:"https://jsbin.com/fegiqoquki/edit?html,css,output",target:"_blank",rel:"noopener noreferrer"},r=t(`<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111609.jpg" alt=""></p><p>HTML 代码就是几张图片。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pic1.jpg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pic2.jpg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pic3.jpg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CSS 代码极其简单，只要两行。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v=s("code",null,"fixed",-1),k={href:"https://dev.to/vinceumo/slide-stacking-effect-using-position-sticky-91f",target:"_blank",rel:"noopener noreferrer"},m=s("h3",{id:"_5-2-表格的表头锁定",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_5-2-表格的表头锁定","aria-hidden":"true"},"#"),n(" 5.2 表格的表头锁定")],-1),b=s("code",null,"sticky",-1),g={href:"https://jsbin.com/decemanohe/edit?html,css,output",target:"_blank",rel:"noopener noreferrer"},h=t(`<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111610.jpg" alt=""></p><p>CSS 代码也很简单。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">th</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),x=s("code",null,"sticky",-1),f=s("code",null,"<th>",-1),y=s("code",null,"<thead>",-1),_=s("code",null,"<tr>",-1),w=s("code",null,"relative",-1),q=s("code",null,"sticky",-1),z={href:"https://css-tricks.com/position-sticky-and-table-headers/",target:"_blank",rel:"noopener noreferrer"},j=t(`<h2 id="z-index" tabindex="-1"><a class="header-anchor" href="#z-index" aria-hidden="true">#</a> z-index</h2><p><code>z-index</code>表示元素重叠时的层次关系。这个值越高，对应的元素就在越上层。所有元素的默认<code>z-index</code>是0。</p><p>由于静态布局的元素不会产生重叠，所以该属性对静态元素无效。只有元素是非静态布局（即<code>position</code>属性的值不是<code>static</code>），<code>z-index</code>属性才有意义。如果没有设置<code>z-index</code>，元素重叠时，HTML 代码中越后面出现的元素在越上层。</p><p><code>z-index</code>属性的难点在于，一组设置了<code>z-index</code>属性的元素，它们的堆叠顺序取决于，它们是否处在同一个堆叠上下文（stacking context）。三种情况会创建堆叠上下文。</p><ul><li>网页的根元素（即<code>&lt;html&gt;</code>元素）</li><li>网页元素是非静态布局，且<code>z-index</code>属性不等于<code>auto</code></li><li>网页元素的<code>opacity</code>属性小于1</li></ul><p>同一个堆叠上下文之中，元素的堆叠（从下层到上层）按照以下顺序决定。</p><ul><li>堆叠上下文的根元素</li><li>设置了定位、且<code>z-index</code>为负值的元素</li><li>没有设置定位的元素</li><li>设置了定位、且<code>z-index</code>为<code>auto</code>的元素</li><li>设置了定位、且<code>z-index</code>为正值的元素</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* HTML 代码如下
&lt;div id=&quot;container&quot;&gt;
  &lt;div id=&quot;item-a&quot;&gt;A&lt;/div&gt;
  &lt;div id=&quot;item-b&quot;&gt;b&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;item-c&quot;&gt;C&lt;/div&gt;
*/</span>

<span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#item-a</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#item-b</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#item-c</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>item-a</code>在最上层，然后是<code>item-b</code>，最下层是<code>item-c</code>。</p><p>现在，对<code>item-a</code>和<code>item-b</code>父元素<code>container</code>设一下定位。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#container</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 或者写成
#container {
  opacity: 0.99;
}
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果就会变成<code>item-c</code>在最上层，然后是<code>item-a</code>，最下层是<code>item-b</code>。这是因为这时<code>container</code>形成一个独立的堆叠上下文，<code>item-a</code>和<code>item-b</code>处在这个上下文之中，与<code>item-c</code>不再是同一个层级的关系了。</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,13),L={href:"https://philipwalton.com/articles/what-no-one-told-you-about-z-index/",target:"_blank",rel:"noopener noreferrer"};function S(T,N){const a=c("ExternalLinkIcon");return i(),p("div",null,[d,s("p",null,[n("堆叠效果（stacking）指的是页面滚动时，下方的元素覆盖上方的元素。下面是一个图片堆叠的例子，下方的图片会随着页面滚动，覆盖上方的图片（查看 "),s("a",u,[n("demo"),e(a)]),n("）。")]),r,s("p",null,[n("它的原理是页面向下滚动时，每张图片都会变成"),v,n("定位，导致后一张图片重叠在前一张图片上面。详细解释可以看"),s("a",k,[n("这里"),e(a)]),n("。")]),m,s("p",null,[n("大型表格滚动的时候，表头始终固定，也可以用"),b,n("实现（查看 "),s("a",g,[n("demo"),e(a)]),n("）。")]),h,s("p",null,[n("需要注意的是，"),x,n("必须设在"),f,n("元素上面，不能设在"),y,n("和"),_,n("元素，因为这两个元素没有"),w,n("定位，也就无法产生"),q,n("效果。详细解释可以看"),s("a",z,[n("这里"),e(a)]),n("。")]),j,s("ul",null,[s("li",null,[s("a",L,[n("What No One Told You About Z-Index"),e(a)]),n(", by Philip Walton")])])])}const H=o(l,[["render",S],["__file","position.html.vue"]]);export{H as default};
