import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as c,c as l,a as n,b as s,d as p,e as i}from"./app-bede4f5a.js";const o={},d=i(`<h1 id="伪类选择器" tabindex="-1"><a class="header-anchor" href="#伪类选择器" aria-hidden="true">#</a> 伪类选择器</h1><p>伪元素（pseudo-element）是 HTML 中并不存在的元素。例如，定义第一个字母或第一行文字时，并未在HTML中作相应的标记。</p><p>伪类（pseudo-class）是浏览器根据网页元素的状态，自动提供的 CSS 类，无需在 HTML 代码显式标记这些类。例如，使用:first-child可以选择某元素的第一个子元素，你就不用写成class=&quot;first-child&quot;。更多关于伪类的内容。</p><p>伪元素有四个。</p><ul><li>::first-line</li><li>::first-letter</li><li>::before</li><li>::after</li></ul><p>伪类</p><ul><li>:first-child</li><li>:link：新的、未访问的链接</li><li>:visited：访问过的链接</li><li>:focus：链接获得焦点（如通过Tab键）</li><li>:hover：当访问者将鼠标指针停留在链接上时</li><li>:active: 当访问者激活链接时</li><li>:empty：空选择器</li></ul><p>新的、未访问的链接显示为红色；访问过的链接变为橙色；</p><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>CSS 2.1非常有限，只提供了三个伪类。</p><ul><li>:active</li><li>:focus</li><li>:hover</li></ul><p>CSS Selector Level 3添加了更多与HTML表单相关的伪类：</p><ul><li>:enabled</li><li>:disabled</li><li>:checked</li><li>:indeterminate</li></ul><p>CSS Basic UI Level 3添加了许多伪类来描述窗口小部件的状态：</p><ul><li>:default</li><li>:valid</li><li>:invalid</li><li>:in-range</li><li>:out-of-range</li><li>:required</li><li>:optional</li><li>:read-only</li><li>:read-write</li></ul><h2 id="first-child-last-child" tabindex="-1"><a class="header-anchor" href="#first-child-last-child" aria-hidden="true">#</a> :first-child，:last-child</h2><p><code>:first-child</code>表示一组元素的第一个元素，且该元素必须是父元素的第一个子元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">li</span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">li:first-child</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，第一个<code>li</code>的字体颜色为绿色，其他<code>li</code>都为蓝色。</p><p><code>:last-child</code>表示一组元素之中的最后一个，且该元素必须是父元素的最后一个子元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">li:last-child</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> lime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="first-of-type-last-of-type" tabindex="-1"><a class="header-anchor" href="#first-of-type-last-of-type" aria-hidden="true">#</a> :first-of-type，:last-of-type</h2><p><code>:first-of-type</code>选中一组元素之中的第一个元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p:first-of-type</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 1.25em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>p:first-of-type</code>只会选中第一个<code>p</code>元素。</p><p><code>:first-of-type</code>与<code>:first-child</code>的区别是，后者必须父元素的第一个子元素。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Hello World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这段 HTML 代码，如果想让第一个<code>&lt;li&gt;</code>显示为绿色，必须使用<code>:first-of-type</code>，而不能是<code>:first-child</code>。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 正确 */</span>
<span class="token selector">ul li:first-of-type</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 错误 */</span>
<span class="token selector">ul li:first-child</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>:last-of-type</code>选中本类之中最后一个元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p:last-of-type</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 0.75em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>p:last-of-type</code>只会选中最后一个<code>p</code>元素。</p><h2 id="nth-child-nth-last-child" tabindex="-1"><a class="header-anchor" href="#nth-child-nth-last-child" aria-hidden="true">#</a> :nth-child()，:nth-last-child()</h2><p><code>:nth-child()</code>选中指定位置的子元素。<code>:nth-last-child()</code>选中指定的倒数位置的子元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p:nth-child(2)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>:nth-child()</code>选中所有第二个子元素位置的<code>p</code>元素。</p><p>注意，如果元素名与<code>:nth-child()</code>之间有没有空格，含义是不一样的。没有空格时，表示匹配该种子元素；有空格时，表示匹配该元素的子元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p :nth-child(2)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码表示，匹配<code>p</code>元素内部的第二个子元素，而不是匹配<code>p</code>元素本身。</p><p><code>:nth-child()</code>和<code>:nth-last-child()</code>可以使用通配符作为参数，参见<code>:nth-of-type()</code>部分的说明。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">ul li:nth-child(3n+3)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码选中3、6、9等位置的<code>li</code>元素，<code>n</code>表示整数序列0、1、2、3……。</p><p>这里还有一个技巧，如果要选中前三个元素，可以在<code>n</code>前面使用负数符号1<code>-</code>。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">ul li:nth-child(-n + 3)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码只会选中前三个<code>li</code>，因为当<code>n</code>大于等于<code>3</code>时，<code>-n + 3</code>会小于等于0，而<code>li</code>的序号是从<code>1</code>开始的。</p><p>相应的，<code>:nth-last-child(-n + 3)</code>就会选中最后三个元素，而<code>:nth-last-child(n + 4)</code>会选中除了最后三个以外的其他元素。</p><p>除了使用<code>An + B</code>这种形式的表达式指定位置，还可以使用<code>odd</code>或<code>even</code>关键字，分别表示奇数位置或偶数位置的元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">ul li:nth-child(odd)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nth-of-type-nth-last-of-type" tabindex="-1"><a class="header-anchor" href="#nth-of-type-nth-last-of-type" aria-hidden="true">#</a> :nth-of-type()，:nth-last-of-type()</h2><p><code>:nth-of-type()</code>匹配指定类型和位置的元素，<code>:nth-last-of-type()</code>匹配倒数位置的指定类型和位置的元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p:nth-of-type(2)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>p:nth-of-type(2)</code>匹配第二个<code>p</code>元素。</p><p>下面是通配符用法。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">li:nth-of-type(2n)</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> lightslategrey<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">li:nth-of-type(3n+2)</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>:nth-of-type</code>的参数可以是<code>an + b</code>的形式。</p><ul><li>“a”是一个整数</li><li>“n”作为英文字母，总是不变的，含义是“0, 1, 2, ....”</li><li>“+”作为一个运算符，可以是“+”，也可以是“-”</li><li>“b”是一个整数，如果提供了运算符，就必须提供“b”</li></ul><p><code>:nth-of-type</code>的参数还可以是<code>even</code>或<code>odd</code>。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">li::nth-of-type(odd)</span>  <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> lightslategrey<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="空选择器" tabindex="-1"><a class="header-anchor" href="#空选择器" aria-hidden="true">#</a> 空选择器</h2><p><code>:empty</code>是空选择器，匹配没有任何子节点的元素。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p:empty</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面的 HTML 代码都匹配<code>:empty</code>选择器。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 闭合标签之间没有空格 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 闭合标签之间只有注释 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- comment --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面的 HTML 代码都不匹配<code>:empty</code>选择器。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 闭合标签之间有空格 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 闭合标签之间有换行符 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- comment --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 闭合标签有子元素 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个选择器的一个作用，就是使用脚本动态添加子元素后，将该元素显示出来。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- No error message --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>error<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- Yes error message --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>error<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Missing Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，为<code>&lt;div&gt;</code>标签添加文本内容后，使用下面的 CSS 代码将其显示出来。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.error:empty</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.error:before</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;\\0274c &quot;</span><span class="token punctuation">;</span> <span class="token comment">/* ❌ icon */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选中非空元素可以像下面这样写。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.alert:not(:empty)</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,72),u={href:"https://www.samanthaming.com/tidbits/72-css-empty-selector",target:"_blank",rel:"noopener noreferrer"};function r(v,k){const a=t("ExternalLinkIcon");return c(),l("div",null,[d,n("ul",null,[n("li",null,[n("a",u,[s("CSS :empty Selector"),p(a)]),s(", Samantha Ming")])])])}const h=e(o,[["render",r],["__file","pseudo-class.html.vue"]]);export{h as default};
